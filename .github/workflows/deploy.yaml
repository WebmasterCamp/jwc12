name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - main
      - staging
  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: write
  deployments: read
  issues: write
  discussions: read
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: read
  statuses: write

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Cahce node_modules
        uses: c-hive/gha-yarn-cache@v2

      - name: Cache NextJS build
        uses: actions/cache@v2
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.yarn
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Set up environments
        run: |
          if ${{ github.ref == 'refs/heads/main' }}; then
            echo "STAGING=0" >> $GITHUB_ENV
            echo "TARGET=production" >> $GITHUB_ENV
          elif ${{ github.ref == 'refs/heads/staging' }}; then
            echo "STAGING=1" >> $GITHUB_ENV
            echo "TARGET=staging" >> $GITHUB_ENV
          fi

      - name: Print Public env
        run: |
          echo "STAGING = ${{ env.STAGING }}"
          echo "TARGET = ${{ env.TARGET }}"
          echo "FROM ${{ github.ref }}"

      - name: Build Application
        run: yarn build
        env:
          STAGING: ${{ env.STAGING }}

      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@master
        if: ${{ github.event_name != 'pull_request' }}
        with:
          args: deploy --only hosting:${{ env.TARGET }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Preview Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          repoToken: '${{ github.token }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          expires: 7d
          target: ${{ env.TARGET }}
